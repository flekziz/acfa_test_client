// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using repository.module;

#nullable disable

namespace repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241119141325_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("repository.module.Models.Internal.ConfigurationInternal", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InternalType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentUid")
                        .HasColumnType("text");

                    b.HasKey("Uid");

                    b.HasIndex("ParentUid");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("repository.module.Models.Internal.EventDataInternal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("EventsData");
                });

            modelBuilder.Entity("repository.module.Models.Internal.EventInternal", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocalizedString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Timestamp")
                        .HasColumnType("integer");

                    b.HasKey("Uid");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("repository.module.Models.Internal.ConfigurationInternal", b =>
                {
                    b.HasOne("repository.module.Models.Internal.ConfigurationInternal", "Parent")
                        .WithMany("Configurations")
                        .HasForeignKey("ParentUid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("repository.module.Models.Internal.PropertyInternal", "Properties", b1 =>
                        {
                            b1.Property<string>("ConfigurationInternalUid")
                                .HasColumnType("text");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("ValueString")
                                .HasColumnType("text");

                            b1.HasKey("ConfigurationInternalUid", "__synthesizedOrdinal");

                            b1.ToTable("Configurations");

                            b1.ToJson("Properties");

                            b1.WithOwner()
                                .HasForeignKey("ConfigurationInternalUid");
                        });

                    b.Navigation("Parent");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("repository.module.Models.Internal.EventDataInternal", b =>
                {
                    b.HasOne("repository.module.Models.Internal.EventInternal", "Event")
                        .WithOne("Data")
                        .HasForeignKey("repository.module.Models.Internal.EventDataInternal", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("repository.module.Models.Internal.ConfigurationInternal", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("repository.module.Models.Internal.EventInternal", b =>
                {
                    b.Navigation("Data")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
